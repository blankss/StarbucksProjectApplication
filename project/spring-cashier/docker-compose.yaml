# docker-compose up --scale cashier=2 -d
# should both lb ports be the same
version: "3"

services:
  # redis:
  #   image: redis
  #   platform: linux/amd64
  #   networks:
  #     - network
  #   ports:
  #     - 6379
  #   hostname: cmpe172cashier
  #   restart: always   
  mysql:
    image: mysql:8.0
    platform: linux/amd64
    volumes:
      - /tmp:/tmp
    networks:
      - network
    ports:
      - 3306
    networks:
      - network
    environment:
      MYSQL_ROOT_PASSWORD: "cmpe172"
    restart: always
  starbucks:
    image: spring-starbucks-api
    platform: linux/amd64
    depends_on:
      - mysql
    networks:
      - network
    ports:
      - 8080
    environment:
      MYSQL_HOST: "mysql"
      MYSQL_USER: "root"
      MYSQL_PASS: "cmpe172"
      MYSQL_SCHEMA: "starbucks"
    restart: always
    deploy:
      mode: replicated
      replicas: 2
  cashier:
    image: spring-cashier
    platform: linux/amd64
    depends_on:
      - mysql
      - kong
    volumes:
      - /tmp:/tmp
    networks:
      - network
    ports:
      - 8085
    environment:
      MYSQL_HOST: "mysql"
      MYSQL_USER: "happy"
      MYSQL_PASS: "camper"
      MYSQL_SCHEMA: "starbucks"
      # REDIS_HOST: "cmpe172cashier"
      # REDIS_PASSWORD: "foobared"
      API_KEY: "2H3fONTa8ugl1IcVS7CjLPnPIS2Hp9dJ"
      API_HOST: "kong:8000/api"
    restart: always
    deploy:
      mode: replicated
      replicas: 2
  kong:
    image: kong:2.4.0
    platform: linux/amd64
    depends_on:
      - starbucks-lb
    networks:
      - network
    restart: always
    ports:
      - "80:8000"
      - "443:8443"
      - "8001:8001"
      - "8444:8444"
    environment:
      KONG_DATABASE: "off"
      KONG_PROXY_ACCESS_LOG: "/dev/stdout"
      KONG_ADMIN_ACCESS_LOG: "/dev/stdout"
      KONG_PROXY_ERROR_LOG: "/dev/stderr"
      KONG_ADMIN_ERROR_LOG: "/dev/stderr"
      KONG_ADMIN_LISTEN: "0.0.0.0:8001, 0.0.0.0:8444 ssl"
  starbucks-lb:
    image: eeacms/haproxy
    depends_on:
      - starbucks
    ports:
      - "85:5000"
      - "1936:1936"
    environment:
      HTTPCHK: "GET /ping"
      BACKENDS: "starbucks"
      BACKENDS_PORT: "8080"
      DNS_ENABLED: "true"
      COOKIES_ENABLED: "false"
      LOG_LEVEL: "info"
    networks:
      - network
  cashier-lb:
    image: eeacms/haproxy
    depends_on:
      - cashier
    ports:
      - "90:5000"
      - "1956:1956"
    environment:
      BACKENDS: "cashier"
      BACKENDS_PORT: "8085"
      DNS_ENABLED: "true"
      COOKIES_ENABLED: "false"
      LOG_LEVEL: "info"
    networks:
      - network

volumes:
  schemas:
    external: false

networks:
  network:
    driver: bridge